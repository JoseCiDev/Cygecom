
// const requestTypeMap = (requestType) => {
//     // [RequestType.product]: 'teste',
//     const options = {
//         [RequestType.product]: {
//             //
//         },
//         // [RequestType.oneOffService]: 'oneOffService',
//         // [RequestType.recurringService]: 'recurringService'
//     }

//     return options[requestType];
// }




Request: {
    requestType: requestType || RequestType.product,
    costCenter: costCenterProduct || CostCenter['41.869.107/0001-58 - JML - Almoxarifado'],
    apportionmentPercentage: apportionmentPercentageProduct  && apportionmentPercentageProduct !== " " ? apportionmentPercentageProduct : faker.helpers.arrayElement([100]),
    apportionmentValue: apportionmentValueProduct && apportionmentValueProduct !== " " ? apportionmentValueProduct : "",
    quoteRequest: { [QuoteRequest.quoteRequest]: quoteRequestProduct !== undefined ? quoteRequestProduct : true },
    acquiringArea: acquiringAreaProduct || AcquiringArea.areaContract,
    comexImport: ProductComexProduct || ProductComexImport.yes,
    reasonForRequest: reasonForRequestProduct || faker.lorem.lines(),
    desiredDeliveryDate: (new Date(data.Request.product.desiredDeliveryDate || new Date())).toISOString().split('T')[0],
    productStorageLocation: productStorageLocationProduct || faker.lorem.lines(),
    suggestionLinks: suggestionLinksProduct || faker.lorem.lines(),
    observation: observationProduct || faker.lorem.lines(),
    paymentCondition: Object.values(paymentMethodProduct).some(([isEnabled]) => isEnabled) ? paymentConditionProduct : { [PaymentCondition.anticipatedPayment]: [true, PaymentCondition.anticipatedPayment] },
    totalValue: totalValueProduct | faker.helpers.arrayElement([358.36, 450.87, 700.04]),
    paymentMethod: Object.values(paymentMethodProduct).some(([isEnabled]) => isEnabled) ? paymentMethodProduct : { [PaymentMethod.boleto]: [true, PaymentMethod.boleto] },
    paymentInstallments: paymentInstallmentsProduct | 3,
    paymentDetails: paymentDetailsProduct || faker.lorem.lines(),
    supplier: supplierProduct ? SupplierOfRequest[data.Request.product.supplier] : SupplierOfRequest['47.960.950/0347-00  - MAGAZINE LUIZA SA'],
    currentRequestTypeValues: {
        serviceName: `Teste_servico_pontual${new Date().getTime()}`,
        costCenter: costCenterOneOffService || CostCenter['11.847.299/0003-00 - SMART FILIAL 2 - Tele Atendimento'],
        apportionmentPercentage: apportionmentPercentageOneOffService !== "" ? data.Request.product.apportionmentPercentage : faker.helpers.arrayElement([100]),
        apportionmentValue: apportionmentValueProduct || faker.helpers.arrayElement([100, 350, 700]),
        quoteRequest: { [QuoteRequest.quoteRequest]: quoteRequestProduct !== undefined ? quoteRequestProduct : true },
        serviceComex: ServiceComexImport.yes,
        suggestionLinks: faker.lorem.lines(),
        observation: faker.lorem.lines(),
        totalValue: faker.helpers.arrayElement([1358.36, 1450.87, 1700.04]),
    },
    // product: {
    //     productCategory: productCategoryProduct || ProductCategory['Maquinas E Equipamentos No Laboratorio'],
    //     productNameAndDescription: productNameAndDescriptionProduct || faker.lorem.lines(),
    //     productQuantity: productQuantityProduct || 3,
    //     productColor: productColorProduct || faker.lorem.word(),
    //     productSize: productSizeProduct || faker.lorem.word(),
    //     productModel: productModelProduct || faker.lorem.word(),
    //     productLink: productLinkProduct || faker.internet.url(),
    //     attachedFile: attachedFileProduct || '../fixtures/attachedFile.png',
    //     saveRequest: saveRequestProduct || {
    //         [SaveRequest.draft]: true,
    //         [SaveRequest.submit]: false,
    //     },
    // },
    // oneOffService: {
    //     serviceName: `Teste_servico_pontual${new Date().getTime()}`,
    //     costCenter: costCenterOneOffService || CostCenter['11.847.299/0003-00 - SMART FILIAL 2 - Tele Atendimento'],
    //     apportionmentPercentage: apportionmentPercentageOneOffService !== "" ? data.Request.product.apportionmentPercentage : faker.helpers.arrayElement([100]),
    //     apportionmentValue: apportionmentValueProduct || faker.helpers.arrayElement([100, 350, 700]),
    //     quoteRequest: { [QuoteRequest.quoteRequest]: quoteRequestProduct !== undefined ? quoteRequestProduct : true },
    //     serviceComex: ServiceComexImport.yes,
    //     suggestionLinks: faker.lorem.lines(),
    //     observation: faker.lorem.lines(),
    //     totalValue: faker.helpers.arrayElement([1358.36, 1450.87, 1700.04]),
    // },
    // recurringService: {
    //     serviceName: `Teste_servico_recorrente${new Date().getTime()}`,
    //     costCenter: costCenterRecurringService || CostCenter['06.354.562/0001-10 - HKM - P&d'],
    //     apportionmentPercentage: apportionmentPercentagerecurringService !== "" ? data.Request.product.apportionmentPercentage : faker.helpers.arrayElement([100]),
    //     apportionmentValue: apportionmentValueProduct || faker.helpers.arrayElement([100, 350, 700]),
    //     quoteRequest: { [QuoteRequest.quoteRequest]: quoteRequestProduct !== undefined ? quoteRequestProduct : true },
    //     serviceComex: ServiceComexImport.yes,
    //     suggestionLinks: faker.lorem.lines(),
    //     observation: faker.lorem.lines(),
    //     totalValue: faker.helpers.arrayElement([2358.58, 2450.87, 2700.04]),
    // },
},

telephoneType: TelephoneType,
userProfile: UserProfile,
sector: Sector,
approverUser: ApproverUser,
approveLimit: ApproveLimit,
autorizedRequest: AutorizedRequest,
requestOtherUsers: RequestOtherUsers,
allowedCostCenter: AllowedRequestCostCenter,
allowedApprovalCostCenter: AllowedApprovalCostCenter,
showHideColumnsUserRegistration: ShowHideColumnsUserRegistration,
showHideColumnsSupplierRegistration: ShowHideColumnsSupplierRegistration,
showHideColumnsMyRequests: ShowHideColumnsMyRequests,
showHideColumnsGeneralRequests: ShowHideColumnsGeneralRequests,
showHideColumnsProductRequests: ShowHideColumnsProductRequests,
showHideColumnsOneOffServiceRequests: ShowHideColumnsOneOffServiceRequests,
showHideColumnsRecurringServiceRequests: ShowHideColumnsRecurringServiceRequests,
showHideColumnsRequestReport: ShowHideColumnsRequestReport,
showHideColumnsProductivityReport: ShowHideColumnsProductivityReport,
showHideColumnsProfilesTable: ShowHideColumnsProfilesTable,
tableColumnsUserRegistration: TableColumnsUserRegistration,
tableColumnsSupplierRegistration: TableColumnsSupplierRegistration,
tableColumnsMyRequests: TableColumnsMyRequests,
tableColumnsGeneralRequests: TableColumnsGeneralRequests,
tableColumnsProductRequests: TableColumnsProductRequests,
tableColumnsOneOffServiceRequests: TableColumnsOneOffServiceRequests,
tableColumnsRecurringServiceRequests: TableColumnsRecurringServiceRequests,
tableColumnsRequestReport: TableColumnsRequestReport,
tableColumnsProductivityReport: TableColumnsProductivityReport,
tableColumnsProfilesTable: TableColumnsProfilesTable,

searchColumnMyRequests: SearchColumnMyRequests,
searchColumnGeneralRequests: SearchColumnGeneralRequests,
searchColumnProductRequests: SearchColumnProductRequests,
searchColumnOneOffServiceRequests: SearchColumnOneOffServiceRequests,
searchColumnRecurringServiceRequests: SearchColumnRecurringServiceRequests,
};